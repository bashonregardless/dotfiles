echo "Inside bash_profile_common"

# Excerpted SO Unix and Linux question "How can I set my default shell to start up tmux"
#
# Setup tmux shell
if command -v tmux &> /dev/null && [[ "$-" == *i* ]] && [[ ! "$TERM" =~ screen ]] && [[ ! "$TERM" =~ tmux ]] && [ -z "$TMUX" ]; then
	echo "Condition to test for existence of tmux evaluated to false"
	echo "Sleep for few moments, then exec tmux"
	sleep 4
	exec tmux
	echo "This statement will never be printed"
else 
	echo
	echo "Condition to test for existence of tmux evaluated to true"
	echo
fi

# This piece of code is copied from original .profile file (the one that 
# came with OS installation)
#
# Add $HOME/bin to $PATH for any binary that will be put in $HOME/bin
#
# This will create duplicate entry in PATH env var if ~/bin exists.
# To avoid duplicate entry, PATH env var must be analyzed for exitstence
# of entry before adding it.
#
# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
    PATH="$HOME/bin:$PATH"
fi
# In SO question "When I execute bash, the $PATH keeps repeating itself",
# it is stated that don't set your PATH incrementally in .bashrc; set it 
# once in .profile and leave it alone thereafter.
#
# The reason is in
#
# SO question on Super User community "Difference between .bashrc and .bash_profile".
# Setting path incrementally in .bashrc is not correct way to set PATH.
# Any time you do source ~/.bashrc, path duplicates and same entries are
# added to PATH.
# On modern unices, there's an added complication related to ~/.profile,
# which could be solved by some effort.
#
# In Ubuntu, this is solved by enabling "Run command as login shell" option in
# Terminal setting, but this is not a permanent solution, it is platform
# specific. This change is made so that .profile is read.

# This piece of code is copied from original .profile file (the one that 
# came with OS installation)
#
# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/.local/bin" ] ; then
    PATH="$HOME/.local/bin:$PATH"
fi

# Excerpted textbook 'Modern Vim', Pg 7
export VIMCONFIG=~/.config/nvim
export VIMDATA=~/.local/share/nvim

# Excerpted textbook 'Modern Vim', Pg 24
export PATH="$PATH:$VIMCONFIG/pack/bundle/start/fzf/bin"

# This piece of code is copied from original .profile file (the one that 
# came with OS installation)
#
# if running bash
if [ -n "$BASH_VERSION" ]; then
    # include .bashrc if it exists
    if [ -f "$HOME/.bashrc" ]; then
	. "$HOME/.bashrc"
    fi
fi
# Note that `source resourcefile` is the same as `. resourcefile`

# Note that for fzf tab completion to work properly, 
# "it has to go to the BOTTOM of ~/.bashrc because there are some completions
# that are overwriting",
# as stated in github issue "cd tab completion not working".
#
# So, writing the code to source the 'fzf tab completion' below is equivanlent 
# to writing the code below/after all the code in ~/.bashrc.
#
# fzf when installed using package manager, needs sourcing of the command
# below make the "Fuzzy completion trigger" functionality work.
#
# Source fzf completion file
if [ -f .config/nvim/pack/bundle/start/fzf/shell/completion.bash ]; then
	source .config/nvim/pack/bundle/start/fzf/shell/completion.bash
fi

echo "Exiting bash_profile_common"
